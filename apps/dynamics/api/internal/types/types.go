// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type ContentType struct {
	TEXT             int `json:"text"`           // 纯文字动态
	TEXT_WITH_IMAGES int `json:"textWithImages"` // 图文混合（静态图）
	TEXT_WITH_GIF    int `json:"textWithGif"`    // 图文混合（动态图）
}

type CreateCommentReplayReq struct {
	CommentId string `json:"commentId"`
	UserId    string `json:"userId"`  // 回复者ID
	Content   string `json:"content"` // 回复内容
}

type CreateCommentReq struct {
	PostId  string `json:"postId"`
	UserId  string `json:"userId"`  // 评论者ID
	Content string `json:"content"` // 评论内容
}

type CreateNotificationReq struct {
	UserId        string `json:"userId"`        // 接收者ID
	Type          int    `json:"type"`          // 通知类型
	TriggerUserId string `json:"triggerUserId"` // 触发者ID
	PostId        string `json:"postId"`        // 动态ID
	CommentId     string `json:"commentId"`     // 评论ID
}

type CreatePostRequest struct {
	UserId  string      `json:"userId"`  //用户id
	Content PostContent `json:"content"` //内容
	Meta    PostMeta    `json:"meta"`    //元数据
}

type DeleteCommentReplayReq struct {
	CommentReplayId string `json:"commentReplayId"`
}

type DeleteCommentReq struct {
	CommentId string `json:"commentId"`
}

type DeletePostRequest struct {
	UserId string `json:"userId"` // 操作者ID
	PostId string `json:"postId"` // 路径参数
}

type Empty struct {
}

type GetCoverRequest struct {
	UserId string `form:"userId"`
}

type GetCoverResp struct {
	Cover string `json:"cover"`
}

type GetPostInfoReq struct {
	PostId string `form:"postId"` //动态id
}

type GetUnreadCountRequest struct {
	UserId string `form:"userId"` // 用户ID
}

type GetUnreadCountResponse struct {
	UnreadCount int `json:"unreadCount"` // 未读数
}

type Ids struct {
	Ids []string `json:"ids"` //点赞post的用户id
}

type LikeAction struct {
	PostId   string `json:"postId"`   // 目标动态ID
	LikerId  string `json:"likerId"`  // 操作者ID
	IsCancel bool   `json:"isCancel"` // 取消点赞标识
}

type ListCommentResp struct {
	List []ListCommentRespStruct `json:"list"` //评论列表
}

type ListCommentRespStruct struct {
	UserId       string `json:"userId"`       //评论用户id
	TargetUserId string `json:"targetUserId"` //被评论的用户iD,根评论此字段为""
	Content      string `json:"content"`      //内容
}

type ListNotificationsRequest struct {
	UserId     string     `form:"userId"`     // 用户ID
	Pagination Pagination `form:"pagination"` // 分页参数
}

type ListNotificationsResponse struct {
	Notifications []Notification `json:"notifications"`
	NextPageToken string         `json:"nextPageToken"`
}

type ListUserPostsRequest struct {
	UserId     string     `form:"userId"`     // 目标用户ID
	IsPin      bool       `form:"isPin"`      // 置顶过滤
	Pagination Pagination `form:"pagination"` // 分页参数
}

type ListVisiblePostsRequest struct {
	ViewerId  string `form:"viewerId"` // 浏览者ID
	PageSize  int    `form:"pageSize"`
	PageToken string `form:"pageToken"`
}

type Notification struct {
	Id            string `json:"id"`            // 通知ID
	Type          int    `json:"type"`          // 通知类型
	TriggerUserId string `json:"triggerUserId"` // 触发用户ID
	PostId        string `json:"postId"`        // 关联动态ID
	CommentId     string `json:"commentId"`     // 关联评论ID
	IsRead        bool   `json:"isRead"`        // 已读状态
}

type NotificationType struct {
	LIKE  int `json:"like"`  // 点赞通知
	REPLY int `json:"reply"` // 评论回复通知
}

type Pagination struct {
	PageSize  int    `json:"pageSize"`  // 每页数量（默认10）
	PageToken string `json:"pageToken"` // 翻页令牌，若为"",则是无偏移
}

type PinPostRequest struct {
	UserId string `json:"userId"` //操作者iD
	PostId string `json:"postId"` //动态
	Pin    bool   `json:"pin"`    // true=置顶
}

type Post struct {
	PostId     string      `json:"postId"`   // 动态ID
	UserId     string      `json:"userId"`   // 发布者ID
	Content    PostContent `json:"content"`  // 内容主体
	Meta       PostMeta    `json:"meta"`     // 元数据
	IsPinned   bool        `json:"isPinned"` // 是否置顶
	CreateTime int64       `json:"createTime"`
}

type PostContent struct {
	Text      string   `json:"text"`      // 文字内容
	ImageUrls []string `json:"imageUrls"` // 图片/GIF URL列表（最多9个）
	Emoji     string   `json:"emoji"`     // 表情符号
}

type PostListResponse struct {
	Posts         []Post `json:"posts"`         //post列表
	NextPageToken string `json:"nextPageToken"` //下一页的token，携带偏移量
}

type PostMeta struct {
	Location       string   `json:"location"`       // 发布地点
	Scope          int      `json:"scope"`          // 可见范围
	VisibleUserIds []string `json:"visibleUserIds"` // 自定义可见用户ID
}

type SetCoverRequest struct {
	UserId   string `json:"userId"`
	CoverUrl string `json:"coverUrl"` // 封面URL
}

type UpdateCommentReplayReq struct {
	IsDeleted       bool   `json:"isDeleted"`       // 删除状态
	CommentReplayId string `json:"commentReplayId"` // 回复ID
}

type UpdateCommentReq struct {
	IsDeleted bool   `json:"isDeleted"` // 删除状态
	CommentId string `json:"commentId"` // 评论ID
}

type UpdateNotificationReq struct {
	UserId string `json:"userId"` // 用户ID
}

type VisibleScope struct {
	FRIENDS int `json:"friends"` // 仅好友可见
	PRIVATE int `json:"private"` // 仅自己可见
	CUSTOM  int `json:"custom"`  // 自定义可见
}
